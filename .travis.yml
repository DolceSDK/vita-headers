language: c
os: linux
dist: bionic
cache:
    directories:
        - $HOME/downloads
before_script:
    - bash $TRAVIS_BUILD_DIR/.travis.d/download_external_apps.sh
script:
    - set -e
    - cd $TRAVIS_BUILD_DIR
    - python $TRAVIS_BUILD_DIR/.travis.d/definition_check.py
    - bash $TRAVIS_BUILD_DIR/.travis.d/definition_ordering.sh
    - bash $TRAVIS_BUILD_DIR/.travis.d/download_sdk.sh
    - export DOLCESDK=$PWD/dolcesdk
    - export PATH=$DOLCESDK/bin:$PATH
    - export INCLUDE_DIR=$TRAVIS_BUILD_DIR/include
    # Make sure headers are valid
    - find $INCLUDE_DIR -type f -name "*.h" | xargs -I FN -n 1 -P 4 arm-dolce-eabi-gcc -I$INCLUDE_DIR -c FN -o /dev/null
    - find $INCLUDE_DIR -type f -name "*.h" | xargs -I FN -n 1 -P 4 arm-dolce-eabi-g++ -I$INCLUDE_DIR -c FN -o /dev/null
    - bash $TRAVIS_BUILD_DIR/.travis.d/download_external_libs.sh
    # Remove installed headers and stubs
    - cd $DOLCESDK/arm-dolce-eabi/include
    - rm -rf psp2{,kern} dolcesdk dolcesdk{,kern}.h
    - cd $DOLCESDK/arm-dolce-eabi/lib
    - rm -rf *_stub{,_weak}.a
    # Build headers and stubs and install
    - cd $TRAVIS_BUILD_DIR
    - cp -r include/* $DOLCESDK/arm-dolce-eabi/include
    - dolce-libs-gen db.yml output
    - cd output
    - make > /dev/null
    - cp *_stub{,_weak}.a $DOLCESDK/arm-dolce-eabi/lib
    # Build samples
    - cd $TRAVIS_BUILD_DIR
    - git clone https://github.com/DolceSDK/samples
    - cd samples
    - mkdir build
    - cd build
    - cmake ..
    - make
    # Build docs
    - cd $TRAVIS_BUILD_DIR/docs
    - $HOME/doxygen/doxygen*/bin/doxygen
